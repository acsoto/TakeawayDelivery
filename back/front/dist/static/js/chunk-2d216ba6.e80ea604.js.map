{"version":3,"sources":["webpack:///./node_modules/_@ctrl_tinycolor@3.4.0@@ctrl/tinycolor/dist/module/util.js","webpack:///./node_modules/_@ctrl_tinycolor@3.4.0@@ctrl/tinycolor/dist/module/conversion.js","webpack:///./node_modules/_@ctrl_tinycolor@3.4.0@@ctrl/tinycolor/dist/module/css-color-names.js","webpack:///./node_modules/_@ctrl_tinycolor@3.4.0@@ctrl/tinycolor/dist/module/format-input.js","webpack:///./node_modules/_@ctrl_tinycolor@3.4.0@@ctrl/tinycolor/dist/module/index.js","webpack:///./node_modules/_@ant-design_colors@5.1.1@@ant-design/colors/dist/index.esm.js","webpack:///./node_modules/_@ant-design_icons-vue@6.0.1@@ant-design/icons-vue/es/insert-css.js","webpack:///./node_modules/_@ant-design_icons-vue@6.0.1@@ant-design/icons-vue/es/utils.js","webpack:///./node_modules/_@ant-design_icons-vue@6.0.1@@ant-design/icons-vue/es/components/IconBase.js","webpack:///./node_modules/_@ant-design_icons-vue@6.0.1@@ant-design/icons-vue/es/components/twoTonePrimaryColor.js","webpack:///./node_modules/_@ant-design_icons-vue@6.0.1@@ant-design/icons-vue/es/components/AntdIcon.js"],"names":["bound01","n","max","isOnePointZero","isPercent","isPercentage","Math","min","parseFloat","parseInt","String","abs","clamp01","val","indexOf","boundAlpha","a","isNaN","convertToPercentage","Number","pad2","c","length","rgbToRgb","r","g","b","rgbToHsl","h","s","l","d","hue2rgb","p","q","t","hslToRgb","rgbToHsv","v","hsvToRgb","i","floor","f","mod","rgbToHex","allow3Char","hex","round","toString","startsWith","charAt","join","rgbaToHex","allow4Char","convertDecimalToHex","convertHexToDecimal","parseIntFromHex","numberInputToObject","color","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","inputToRGB","rgb","ok","format","stringInputToObject","isValidCSSUnit","substr","Object","prototype","hasOwnProperty","call","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","matchers","RegExp","rgba","hsl","hsla","hsv","hsva","hex3","hex6","hex4","hex8","trim","toLowerCase","named","match","exec","Boolean","TinyColor","opts","_a","this","originalInput","roundA","gradientType","isValid","isDark","getBrightness","isLight","toRgb","getLuminance","R","G","B","RsRGB","GsRGB","BsRGB","pow","getAlpha","setAlpha","alpha","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","fmt","x","toPercentageRgbString","rnd","toName","_i","entries","_b","key","value","formatSet","formattedString","hasAlpha","needsAlphaFormat","toNumber","clone","lighten","amount","brighten","darken","tint","mix","shade","desaturate","saturate","greyscale","spin","hue","rgb1","rgb2","analogous","results","slices","part","ret","push","complement","monochromatic","res","modification","splitcomplement","onBackground","background","fg","bg","triad","polyad","tetrad","result","increment","equals","hueStep","saturationStep","saturationStep2","brightnessStep1","brightnessStep2","lightColorCount","darkColorCount","darkColorMap","index","opacity","getHue","light","getSaturation","saturation","toFixed","getValue","generate","arguments","undefined","patterns","pColor","colorString","_hsv","_colorString","theme","map","_ref","darkColorString","backgroundColor","presetPrimaryColors","volcano","geekblue","presetPalettes","presetDarkPalettes","keys","forEach","primary","containers","styleElements","usage","createStyleElement","styleElement","document","createElement","setAttribute","insertCss","css","options","Error","position","prepend","container","querySelector","containerId","insertBefore","childNodes","appendChild","charCodeAt","styleSheet","cssText","textContent","_objectSpread","target","source","ownKeys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","_defineProperty","obj","defineProperty","configurable","writable","warn","valid","message","warning","isIconDefinition","name","icon","node","rootProps","tag","attrs","children","child","getSecondaryColor","primaryColor","normalizeTwoToneColors","twoToneColor","Array","isArray","iconStyles","cssInjectedFlag","styleStr","window","documentElement","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","sourceKeys","twoToneColorPalette","secondaryColor","calculated","setTwoToneColors","getTwoToneColors","props","context","_props$context$attrs","restProps","colors","width","height","fill","focusable","inheritAttrs","displayName","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","slice","constructor","from","test","len","arr2","Symbol","iterator","_arr","_n","_d","_e","_s","next","done","err","setTwoToneColor","_normalizeTwoToneColo","_normalizeTwoToneColo2","getTwoToneColor","_classObj","cls","rotate","tabindex","onClick","classObj","anticon","svgClassString","iconTabIndex","svgStyle","msTransform","transform"],"mappings":"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","file":"static/js/chunk-2d216ba6.e80ea604.js","sourcesContent":["/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nexport function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n}\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return Number(n) * 100 + \"%\";\n    }\n    return n;\n}\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n","import { bound01, pad2 } from './util';\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nexport function rgbToRgb(r, g, b) {\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255,\n    };\n}\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nexport function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nexport function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nexport function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nexport function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n        pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nexport function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\n/** Converts a decimal to a hex value */\nexport function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n/** Converts a hex value to a decimal */\nexport function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\n/** Parse a base-16 hex value into a base-10 integer */\nexport function parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexport function numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\n","// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\n/**\n * @hidden\n */\nexport var names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    goldenrod: '#daa520',\n    gold: '#ffd700',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavenderblush: '#fff0f5',\n    lavender: '#e6e6fa',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n","import { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\nimport { names } from './css-color-names';\nimport { boundAlpha, convertToPercentage } from './util';\n/**\n * Given a string or object, convert that input to RGB\n *\n * Possible string inputs:\n * ```\n * \"red\"\n * \"#f00\" or \"f00\"\n * \"#ff0000\" or \"ff0000\"\n * \"#ff000000\" or \"ff000000\"\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n * ```\n */\nexport function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\n/**\n * Permissive string parsing.  Take in a number of formats, and output an object\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n */\nexport function stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            a: convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\n/**\n * Check to see if it looks like a CSS unit\n * (see `matchers` above for definition).\n */\nexport function isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n","import { rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv, numberInputToObject } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util';\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # appened.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # appened.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\" + r + \", \" + g + \", \" + b + \")\" : \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return Math.round(bound01(x, 255) * 100) + \"%\"; };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%)\"\n            : \"rgba(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        return new TinyColor({\n            r: bg.r + (fg.r - bg.r) * fg.a,\n            g: bg.g + (fg.g - bg.g) * fg.a,\n            b: bg.b + (fg.b - bg.b) * fg.a,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\n// kept for backwards compatability with v1\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n","import { TinyColor } from '@ctrl/tinycolor';\n\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Number(saturation.toFixed(2));\n}\n\nfunction getValue(hsv, i, light) {\n  var value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n\n  if (value > 1) {\n    value = 1;\n  }\n\n  return Number(value.toFixed(2));\n}\n\nfunction generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = new TinyColor(color);\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = pColor.toHsv();\n    var colorString = new TinyColor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }).toHexString();\n    patterns.push(colorString);\n  }\n\n  patterns.push(pColor.toHexString());\n\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = pColor.toHsv();\n\n    var _colorString = new TinyColor({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue(_hsv, _i)\n    }).toHexString();\n\n    patterns.push(_colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n          opacity = _ref.opacity;\n      var darkColorString = new TinyColor(opts.backgroundColor || '#141414').mix(patterns[index], opacity * 100).toHexString();\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}\n\nvar presetPrimaryColors = {\n  red: '#F5222D',\n  volcano: '#FA541C',\n  orange: '#FA8C16',\n  gold: '#FAAD14',\n  yellow: '#FADB14',\n  lime: '#A0D911',\n  green: '#52C41A',\n  cyan: '#13C2C2',\n  blue: '#1890FF',\n  geekblue: '#2F54EB',\n  purple: '#722ED1',\n  magenta: '#EB2F96',\n  grey: '#666666'\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function (key) {\n  presetPalettes[key] = generate(presetPrimaryColors[key]);\n  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes\n\n  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {\n    theme: 'dark',\n    backgroundColor: '#141414'\n  });\n  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];\n});\nvar red = presetPalettes.red;\nvar volcano = presetPalettes.volcano;\nvar gold = presetPalettes.gold;\nvar orange = presetPalettes.orange;\nvar yellow = presetPalettes.yellow;\nvar lime = presetPalettes.lime;\nvar green = presetPalettes.green;\nvar cyan = presetPalettes.cyan;\nvar blue = presetPalettes.blue;\nvar geekblue = presetPalettes.geekblue;\nvar purple = presetPalettes.purple;\nvar magenta = presetPalettes.magenta;\nvar grey = presetPalettes.grey;\n\nexport { blue, cyan, geekblue, generate, gold, green, grey, lime, magenta, orange, presetDarkPalettes, presetPalettes, presetPrimaryColors, purple, red, volcano, yellow };\n","// https://github.com/substack/insert-css\nvar containers = []; // will store container HTMLElement references\n\nvar styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}\n\nvar usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';\n\nfunction createStyleElement() {\n  var styleElement = document.createElement('style');\n  styleElement.setAttribute('type', 'text/css');\n  return styleElement;\n} // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\n\nfunction insertCss(css, options) {\n  options = options || {};\n\n  if (css === undefined) {\n    throw new Error(usage);\n  }\n\n  var position = options.prepend === true ? 'prepend' : 'append';\n  var container = options.container !== undefined ? options.container : document.querySelector('head');\n  var containerId = containers.indexOf(container); // first time we see this container, create the necessary entries\n\n  if (containerId === -1) {\n    containerId = containers.push(container) - 1;\n    styleElements[containerId] = {};\n  } // try to get the correponding container + position styleElement, create it otherwise\n\n\n  var styleElement;\n\n  if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {\n    styleElement = styleElements[containerId][position];\n  } else {\n    styleElement = styleElements[containerId][position] = createStyleElement();\n\n    if (position === 'prepend') {\n      container.insertBefore(styleElement, container.childNodes[0]);\n    } else {\n      container.appendChild(styleElement);\n    }\n  } // strip potential UTF-8 BOM if css was read from a file\n\n\n  if (css.charCodeAt(0) === 0xfeff) {\n    css = css.substr(1, css.length);\n  } // actually add the stylesheet\n\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText += css;\n  } else {\n    styleElement.textContent += css;\n  }\n\n  return styleElement;\n}\n\nexport default insertCss;","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { nextTick, h } from 'vue';\nimport { generate as generateColor } from '@ant-design/colors';\nimport insertCss from './insert-css';\nexport function warn(valid, message) {\n  // Support uglify\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    console.error(\"Warning: \".concat(message));\n  }\n}\nexport function warning(valid, message) {\n  warn(valid, \"[@ant-design/icons-vue] \".concat(message));\n} // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nexport function isIconDefinition(target) {\n  return typeof target === 'object' && typeof target.name === 'string' && typeof target.theme === 'string' && (typeof target.icon === 'object' || typeof target.icon === 'function');\n}\nexport function normalizeAttrs() {\n  var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(attrs).reduce(function (acc, key) {\n    var val = attrs[key];\n\n    switch (key) {\n      case 'class':\n        acc.className = val;\n        delete acc[\"class\"];\n        break;\n\n      default:\n        acc[key] = val;\n    }\n\n    return acc;\n  }, {});\n}\nexport function generate(node, key, rootProps) {\n  if (!rootProps) {\n    return h(node.tag, _objectSpread({\n      key: key\n    }, node.attrs), (node.children || []).map(function (child, index) {\n      return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n    }));\n  }\n\n  return h(node.tag, _objectSpread({\n    key: key\n  }, rootProps, node.attrs), (node.children || []).map(function (child, index) {\n    return generate(child, \"\".concat(key, \"-\").concat(node.tag, \"-\").concat(index));\n  }));\n}\nexport function getSecondaryColor(primaryColor) {\n  // choose the second color\n  return generateColor(primaryColor)[0];\n}\nexport function normalizeTwoToneColors(twoToneColor) {\n  if (!twoToneColor) {\n    return [];\n  }\n\n  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];\n} // These props make sure that the SVG behaviours like general text.\n// Reference: https://blog.prototypr.io/align-svg-icons-to-text-and-say-goodbye-to-font-icons-d44b3d7b26b4\n\nexport var svgBaseProps = {\n  width: '1em',\n  height: '1em',\n  fill: 'currentColor',\n  'aria-hidden': 'true',\n  focusable: 'false'\n};\nexport var iconStyles = \"\\n.anticon {\\n  display: inline-block;\\n  color: inherit;\\n  font-style: normal;\\n  line-height: 0;\\n  text-align: center;\\n  text-transform: none;\\n  vertical-align: -0.125em;\\n  text-rendering: optimizeLegibility;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.anticon > * {\\n  line-height: 1;\\n}\\n\\n.anticon svg {\\n  display: inline-block;\\n}\\n\\n.anticon::before {\\n  display: none;\\n}\\n\\n.anticon .anticon-icon {\\n  display: block;\\n}\\n\\n.anticon[tabindex] {\\n  cursor: pointer;\\n}\\n\\n.anticon-spin::before,\\n.anticon-spin {\\n  display: inline-block;\\n  -webkit-animation: loadingCircle 1s infinite linear;\\n  animation: loadingCircle 1s infinite linear;\\n}\\n\\n@-webkit-keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\";\nvar cssInjectedFlag = false;\nexport var useInsertStyles = function useInsertStyles() {\n  var styleStr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : iconStyles;\n  nextTick(function () {\n    if (!cssInjectedFlag) {\n      if (typeof window !== 'undefined' && window.document && window.document.documentElement) {\n        insertCss(styleStr, {\n          prepend: true\n        });\n      }\n\n      cssInjectedFlag = true;\n    }\n  });\n};","function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { generate, getSecondaryColor, isIconDefinition, warning, useInsertStyles } from '../utils';\nvar twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6',\n  calculated: false\n};\n\nfunction setTwoToneColors(_ref) {\n  var primaryColor = _ref.primaryColor,\n      secondaryColor = _ref.secondaryColor;\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\n\nfunction getTwoToneColors() {\n  return _objectSpread({}, twoToneColorPalette);\n}\n\nvar IconBase = function IconBase(props, context) {\n  var _props$context$attrs = _objectSpread({}, props, context.attrs),\n      icon = _props$context$attrs.icon,\n      primaryColor = _props$context$attrs.primaryColor,\n      secondaryColor = _props$context$attrs.secondaryColor,\n      restProps = _objectWithoutProperties(_props$context$attrs, [\"icon\", \"primaryColor\", \"secondaryColor\"]);\n\n  var colors = twoToneColorPalette;\n\n  if (primaryColor) {\n    colors = {\n      primaryColor: primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n\n  useInsertStyles();\n  warning(isIconDefinition(icon), \"icon should be icon definiton, but got \".concat(icon));\n\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n\n  var target = icon;\n\n  if (target && typeof target.icon === 'function') {\n    target = _objectSpread({}, target, {\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    });\n  }\n\n  return generate(target.icon, \"svg-\".concat(target.name), _objectSpread({}, restProps, {\n    'data-icon': target.name,\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': 'true'\n  })); // },\n};\n\nIconBase.props = {\n  icon: Object,\n  primaryColor: String,\n  secondaryColor: String,\n  focusable: String\n};\nIconBase.inheritAttrs = false;\nIconBase.displayName = 'IconBase';\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nexport default IconBase;","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport VueIcon from './IconBase';\nimport { normalizeTwoToneColors } from '../utils';\nexport function setTwoToneColor(twoToneColor) {\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),\n      _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2),\n      primaryColor = _normalizeTwoToneColo2[0],\n      secondaryColor = _normalizeTwoToneColo2[1];\n\n  return VueIcon.setTwoToneColors({\n    primaryColor: primaryColor,\n    secondaryColor: secondaryColor\n  });\n}\nexport function getTwoToneColor() {\n  var colors = VueIcon.getTwoToneColors();\n\n  if (!colors.calculated) {\n    return colors.primaryColor;\n  }\n\n  return [colors.primaryColor, colors.secondaryColor];\n}","import * as _vue from \"vue\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? Object(arguments[i]) : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport VueIcon from './IconBase';\nimport { getTwoToneColor, setTwoToneColor } from './twoTonePrimaryColor';\nimport { normalizeTwoToneColors } from '../utils'; // Initial setting\n\nsetTwoToneColor('#1890ff');\n\nvar Icon = function Icon(props, context) {\n  var _classObj;\n\n  var _props$context$attrs = _objectSpread({}, props, context.attrs),\n      cls = _props$context$attrs[\"class\"],\n      icon = _props$context$attrs.icon,\n      spin = _props$context$attrs.spin,\n      rotate = _props$context$attrs.rotate,\n      tabindex = _props$context$attrs.tabindex,\n      twoToneColor = _props$context$attrs.twoToneColor,\n      onClick = _props$context$attrs.onClick,\n      restProps = _objectWithoutProperties(_props$context$attrs, [\"class\", \"icon\", \"spin\", \"rotate\", \"tabindex\", \"twoToneColor\", \"onClick\"]);\n\n  var classObj = (_classObj = {\n    anticon: true\n  }, _defineProperty(_classObj, \"anticon-\".concat(icon.name), Boolean(icon.name)), _defineProperty(_classObj, cls, cls), _classObj);\n  var svgClassString = spin === '' || !!spin || icon.name === 'loading' ? 'anticon-spin' : '';\n  var iconTabIndex = tabindex;\n\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n    restProps.tabindex = iconTabIndex;\n  }\n\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor),\n      _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2),\n      primaryColor = _normalizeTwoToneColo2[0],\n      secondaryColor = _normalizeTwoToneColo2[1];\n\n  return _vue.createVNode(\"span\", _vue.mergeProps(restProps, {\n    \"role\": \"img\",\n    \"aria-label\": icon.name,\n    \"onClick\": onClick,\n    \"class\": classObj\n  }), [_vue.createVNode(VueIcon, {\n    \"class\": svgClassString,\n    \"icon\": icon,\n    \"primaryColor\": primaryColor,\n    \"secondaryColor\": secondaryColor,\n    \"style\": svgStyle\n  }, null)]);\n};\n\nIcon.props = {\n  spin: Boolean,\n  rotate: Number,\n  icon: Object,\n  twoToneColor: String\n};\nIcon.displayName = 'AntdIcon';\nIcon.inheritAttrs = false;\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nexport default Icon;"],"sourceRoot":""}